<?php

/* =========================================================================
 *
 *  Copyright OSHERA Consortium
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0.txt
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 * ========================================================================= */

/** Export  component */
class Journal_ExportComponent extends AppComponent {

  /**
   * Export a citation
   * @return string
   */
  public function citation($resource, $type)
    {
    switch ($type)
      {
      case "bibtex":
        $this->outputBibtex($resource);
        break;
      case "xml":
        $this->OutputXML($resource);
        break;
      }
    }

  /** Send the buffer to the output */
  private function sendBufferToOutput($buffer, $name, $dest = 'I')
    {
    //We send to a browser
    header("Content-type: application/force-download");
    header('Content-Length: ' . strlen($buffer));
    header('Content-disposition: attachment; filename="' . $name . '"');
    echo $buffer;
    }

  /** Output as bibtex */
  function outputBibtex($resource, $name = 'bibtex.txt', $dest = 'I')
    {
    $buffer = "@comment{This file has been generated by the Midas Journal}\n\n";
    // Authors
    $i = 0;
    $authortitle = "";
    $authorsname = "";
    foreach ($resource->getAuthors() as $author)
      {
      $firstname = $author[0];
      $lastname = $author[1];
      if ($i > 0)
        {
        $authortitle .= "+";
        $authorsname .= " and ";
        }
      $authortitle .= $lastname;
      if (strlen($firstname) > 0)
        {
        $authorsname .= $firstname[0] . ". " . $lastname;
        }
      else
        {
        $authorsname .= $lastname;
        }

      $i++;
      }

    $date = date("m-d-Y", strtotime($resource->getRevision()->getDate()));
    $buffer .= "@{" . $authortitle . $date['year'] . "\n";

    // Authors
    $buffer .= "  Author\t= \"" . $authorsname . "\",\n";

    // Title
    $buffer .= "  Title\t\t= \"" . $resource->getName() . "\",\n";

    // Handle
    //    $buffer .= "  howpublished\t\t= \"\\url{" . $this->controller->getHandleServerUrl() . $this->controller->Item->getHandle($itemid) . "}\",\n";
    // Year
    $buffer .= "  Year\t\t= " . date("Y", strtotime($resource->getRevision()->getDate())) . ",\n";

    // Month
    $buffer .= "  Month\t\t= " . date("m", strtotime($resource->getRevision()->getDate())) . ",\n";

    // Abstract
    if (strlen($resource->getDescription()) > 0)
      {
      $buffer .= "  Abstract\t= \"" . stripslashes($resource->getDescription()) . "\",\n";
      }

    // Institution
    if (strlen($resource->getInstitution()) > 0)
      {
      $buffer .= "  Institution\t= \"" . stripslashes($resource->getInstitution()) . "\",\n";
      }

    // finishing
    $buffer .= "}\n\n";

    $this->sendBufferToOutput($buffer, $name);
    }

  /** Output as XML */
  function outputXML($resource, $name = 'publications.xml')
    {
    $buffer = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>";
    $buffer .= "<Publications>\n";

    $buffer .= "<Publication>\n";
    $buffer .= " <AuthorList>\n";

    foreach ($resource->getAuthors() as $author)
      {
      $buffer .= " <Author>\n";
      $buffer .= "   <LastName>" . $author[0] . "</LastName>\n";
      $buffer .= "   <FirstName>" . $author[1] . "</FirstName>\n";
      $buffer .= " </Author>\n";
      }
    $buffer .= " </AuthorList>\n";

    // Title
    $buffer .= " <Title>" . $resource->getName() . "</Title>\n";

    // Abstract
    $buffer .= " <Abstract>\n<AbstractText>";
    $buffer .= $resource->getDescription();
    $buffer .= " </AbstractText>\n</Abstract>\n";

    // Institution
    if (strlen($resource->getInstitution()) > 0)
      {
      $buffer .= " <Institution>" . stripslashes($resource->getInstitution()) . "</Institution>\n";
      }

    // Year
    $buffer .= " <Year>" . date("Y", strtotime($resource->getRevision()->getDate())) . "</Year>\n";

    // Month
    $buffer .= " <Month>" . date("Ym", strtotime($resource->getRevision()->getDate())) . "</Month>\n";

    // Handle
    //  $buffer .= " <Location>" . $this->controller->getHandleServerUrl() . $this->controller->Item->getHandle($itemid) . "</Location>\n";

    $buffer .= "</Publication>\n\n";

    $buffer .= "</Publications>\n";
    $this->sendBufferToOutput($buffer, $name);
    }

}

// end class